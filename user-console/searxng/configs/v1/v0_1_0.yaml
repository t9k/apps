## @param image.registry SearXNG image registry
## @param image.repository SearXNG image repository
## @param image.tag SearXNG image tag
## @param image.pullPolicy SearXNG image pull policy
##
image:
  registry: "$(T9K_APP_IMAGE_REGISTRY)"
  repository: "$(T9K_APP_IMAGE_NAMESPACE)/searxng"
  tag: "2024.11.17-10d3af84b"
  pullPolicy: IfNotPresent


config:
  ## @param config.settings.enabled Enable/disable settings configuration
  ## @param config.settings.data Settings configuration
  ##
  settings:
    enabled: true
    data: |-
      use_default_settings: true

      engines:
        - name: bing
          disabled: false

      search:
        safe_search: 0
        autocomplete: ""
        default_lang: ""
        formats:
          - html
          - json

      server:
        base_url: $(T9K_HOME_DOMAIN)/apps/{{ .Release.Namespace }}/searxng/{{ .Release.Name }}/
        port: 8080
        bind_address: "0.0.0.0"
        secret_key: "57dc63125e7eef404481411b99c21fb9a5763b724b0bc88f2440ef373cf94809"
        limiter: false
        image_proxy: true

      ui:
        static_use_hash: true

      outgoing:
        request_timeout: 2.0
        max_request_timeout: 10.0
        useragent_suffix: ""
        pool_connections: 100
        pool_maxsize: 10
        enable_http2: true

        # proxies:
        #   all://:
        #     - http://proxy1:8080

  ## @param config.limiter.enabled Enable/disable limiter configuration
  ## @param config.limiter.data Limiter configuration
  ##
  limiter:
    enabled: true
    data: |-
      [botdetection.ip_limit]
      # activate link_token method in the ip_limit method
      link_token = true

  ## @param config.uwsgi.enabled Enable/disable uWSGI configuration
  ## @param config.uwsgi.data uWSGI configuration
  ##
  uwsgi:
    enabled: true
    data: |-
      [uwsgi]
      # Who will run the code
      uid = searxng
      gid = searxng

      # Number of workers (usually CPU count)
      # default value: %k (= number of CPU core, see Dockerfile)
      workers = %k

      # Number of threads per worker
      # default value: 4 (see Dockerfile)
      threads = 4

      # The right granted on the created socket
      chmod-socket = 666

      # Plugin to use and interpreter config
      single-interpreter = true
      master = true
      plugin = python3
      lazy-apps = true
      enable-threads = 4

      # Module to import
      module = searx.webapp

      # Virtualenv and python path
      pythonpath = /usr/local/searxng/
      chdir = /usr/local/searxng/searx/

      # automatically set processes name to something meaningful
      auto-procname = true

      # Disable request logging for privacy
      disable-logging = true
      log-5xx = true

      # Set the max size of a request (request-body excluded)
      buffer-size = 8192

      # No keep alive
      # See https://github.com/searx/searx-docker/issues/24
      add-header = Connection: close

      # uwsgi serves the static files
      static-map = /static=/usr/local/searxng/searx/static
      # expires set to one day
      static-expires = /* 86400
      static-gzip-all = True
      offload-threads = 4

## @param resources.limits.cpu CPU limit for SearXNG container
## @param resources.limits.memory Memory limit for SearXNG container
##
resources:
  limits:
    cpu: 4
    memory: 8Gi

## @param env Array of extra environment variables
##
env:
  - name: TZ
    value: "Asia/Shanghai"
