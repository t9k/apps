image:
  registry: docker.io
  repository: t9kpublic/fastgpt
  tag: ""
  pullPolicy: IfNotPresent

resources:
  limits:
    cpu: 1
    memory: 2Gi

app:

  defaultRootPassword: "123456"
  openAiBaseUrl: "http://oneapi:3000/v1"
  chatApiKey: "sk-fastgpt"
  dbMaxLink: "30"
  tokenKey: "any"
  rootKey: "root_key"
  fileTokenKey: "filetoken"
  logLevel: "info"
  storeLogLevel: "warn"

  config:

    systemEnv:
      openapiPrefix: "fastgpt"
      vectorMaxProcess: 15
      qaMaxProcess: 15
      pgHNSWEfSearch: 100
    
    llmModels:
      - model: "gpt-3.5-turbo"
        name: "gpt-3.5-turbo"
        maxContext: 16000
        maxResponse: 4000
        quoteMaxToken: 13000
        maxTemperature: 1.2
        charsPointsPrice: 0
        censor: false
        vision: false
        datasetProcess: true
        usedInClassify: true
        usedInExtractFields: true
        usedInToolCall: true
        usedInQueryExtension: true
        toolChoice: true
        functionCall: false
        customCQPrompt: ""
        customExtractPrompt: ""
        defaultSystemChatPrompt: ""
        defaultConfig: {}
      # 其他 llm model 的配置 ...
    
    vectorModels:
      - model: "text-embedding-3-large"
        name: "Embedding-2"
        avatar: "/imgs/model/openai.svg"
        charsPointsPrice: 0
        defaultToken: 512
        maxToken: 3000
        weight: 100
        dbConfig: {}
        queryConfig: {}
        defaultConfig:
          dimensions: 1024
      # 其他 vector model 的配置 ...
    
    reRankModels: []

    audioSpeechModels: 
      - model: "tts-1"
        name: "OpenAI TTS1"
        charsPointsPrice: 0
        voices:
          - label: "Alloy"
            value: "alloy"
            bufferId: "openai-Alloy"
          # 其他 voices 的配置 ...
      # 其他 audio speech model 的配置

    whisperModel:
      model: "whisper-1"
      name: "Whisper1"
      charsPointsPrice: 0

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

nodeSelector: {}
affinity: {}
tolerations: []

# components
sandbox:
  image:
    registry: docker.io
    repository: t9kpublic/fastgpt-sandbox
    tag: ""
    pullPolicy: IfNotPresent

  resources:
    limits:
      cpu: 2
      memory: 4Gi

  service:
    type: ClusterIP
    port: 3000
  
  nodeSelector: {}
  affinity: {}
  tolerations: []

# sub-charts
mongodb:
  # -- Enable or disable the built-in MangoDB
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/mongodb
    tag: 8.0.0-debian-12-r1
  architecture: replicaset
  replicaCount: 1
  auth:
    rootUser: root
    rootPassword: "123456"
  replicaSetName: rs0

  initdbScripts:
    init.js: |
      if (rs.status()["ok"] !== 1) {
        rs.initiate({
          _id: "rs0",
          version: 1,
          members: [{
            _id: 0,
            host: "{{ .Release.Name }}-mongodb-headless.{{ .Release.Namespace }}.svc.cluster.local:27017"
          }]
        });
      }

  persistence:
    enabled: true
    storageClass: ""
    size: 2Gi 

postgresql:
  # -- Enable or disable the built-in PostgreSQL
  enabled: true
  image:
    registry: docker.io
    repository: linuxsuren/pgvector
    tag: v0.0.1
  global:
    postgresql:
      auth:
        # -- The password of PostgreSQL, default username is `postgres`
        postgresPassword: postgres
        # -- The default database of PostgreSQL
        database: postgres
