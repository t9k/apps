## @param global.extraEnvs Array of extra environment variables for frontend, api and worker
## @param global.extraBackendEnvs Array of extra backend environment variables for api and worker
##
global:

  ## @param global.image.registry Global image registry
  ## @param global.image.tag Global image tag
  ## @param global.image.pullPolicy Global image pull policy
  ##
  image:
    registry: "$(T9K_APP_IMAGE_REGISTRY)"
    tag: "1.3.0"
    pullPolicy: IfNotPresent

  extraEnvs: []

  extraBackendEnvs:
  - name: SECRET_KEY
    value: "tensorstack"
  - name: MIGRATION_ENABLED
    value: "true"
  # 设置上传文件大小和批量限制
  - name: UPLOAD_FILE_SIZE_LIMIT
    value: "15"
  - name: UPLOAD_FILE_BATCH_LIMIT
    value: "5"
  # 必须设置向量数据库
  - name: VECTOR_STORE
    value: ""
  ## milvus ##
  # - name: MILVUS_URI
  #   value: "http://host.docker.internal:19530"
  # - name: MILVUS_USER
  #   value: ""
  # - name: MILVUS_PASSWORD
  #   value: ""
  # - name: MILVUS_ENABLE_HYBRID_SEARCH
  #   value: "true"
  ## weaviate ##
  # - name: WEAVIATE_ENDPOINT
  #   value: "http://weaviate:8080"
  # - name: WEAVIATE_API_KEY
  #   value: ""
  ## qdrant ##
  # - name: QDRANT_URL
  #   value: "http://qdrant:6333"
  # - name: QDRANT_API_KEY
  #   value: ""
  # - name: QDRANT_CLIENT_TIMEOUT
  #   value: "20"
  # - name: QDRANT_GRPC_ENABLED
  #   value: "false"
  # - name: QDRANT_GRPC_PORT
  #   value: "6334"

## @param frontend.image.repository Frontend image repository
## @param frontend.resources.limits.cpu Frontend cpu limit
## @param frontend.resources.limits.memory Frontend memory limit
##
frontend:
  image:
    repository: "$(T9K_APP_IMAGE_NAMESPACE)/dify-web"
  resources:
    limits:
      cpu: 500m
      memory: 2Gi

## @param api.replicaCount API replica count
## @param api.image.repository API image repository
## @param api.resources.limits.cpu API cpu limit
## @param api.resources.limits.memory API memory limit
##
api:
  replicaCount: 1  # 1 for testing, 2-3 for production
  image:
    repository: "$(T9K_APP_IMAGE_NAMESPACE)/dify-api"
  resources:
    limits:
      cpu: 2
      memory: 8Gi

## @param worker.replicaCount Worker replica count
## @param worker.image.repository Worker image repository
## @param worker.resources.limits.cpu Worker cpu limit
## @param worker.resources.limits.memory Worker memory limit
##
worker:
  replicaCount: 1  # 1 for testing, 2-6 for production
  image:
    repository: "$(T9K_APP_IMAGE_NAMESPACE)/dify-api"
  resources:
    limits:
      cpu: 4
      memory: 16Gi

## @param sandbox.replicaCount Sandbox replica count
## @param sandbox.apiKey Sandbox API key
## @param sandbox.image.repository Sandbox image repository
## @param sandbox.image.tag Sandbox image tag
## @param sandbox.config.python_requirements Python requirements for sandbox
## @param sandbox.resources.limits.cpu Sandbox cpu limit
## @param sandbox.resources.limits.memory Sandbox memory limit
##
sandbox:
  replicaCount: 1  # 1 for testing, 2-3 for production
  apiKey: "dify-sandbox"
  image:
    repository: "$(T9K_APP_IMAGE_NAMESPACE)/dify-sandbox"
    tag: "0.2.11"
  config:
    # python_requirements: |
    #   numpy==1.20.3
    #   scipy==1.6.3
    python_requirements: ""
  resources:
    limits:
      cpu: 2
      memory: 8Gi

## @param pluginDaemon.replicaCount PluginDaemon replica count
## @param pluginDaemon.serverKey PluginDaemon server key
## @param pluginDaemon.difyInnerApiKey PluginDaemon Dify inner api key
## @param pluginDaemon.image.repository PluginDaemon image repository
## @param pluginDaemon.image.tag PluginDaemon image tag
## @param pluginDaemon.config.python_requirements Python requirements for pluginDaemon
## @param pluginDaemon.resources.limits.cpu PluginDaemon cpu limit
## @param pluginDaemon.resources.limits.memory PluginDaemon memory limit
##
pluginDaemon:
  replicaCount: 1
  serverKey: "dify-plugin-daemon"
  difyInnerApiKey: "dify-inner-api-key"
  image:
    repository: "$(T9K_APP_IMAGE_NAMESPACE)/dify-plugin-daemon"
    tag: "0.0.6-local"
  resources:
    limits:
      cpu: 2
      memory: 4Gi

## @param redis.embedded Enable/disable embedded Redis
## @param redis.image.registry Redis image registry
## @param redis.image.repository Redis image repository
## @param redis.image.tag Redis image tag
## @param redis.auth.password Redis authentication password
## @param redis.master.resourcesPreset Redis master resources preset
## @param redis.master.persistence.enabled Enable/disable Redis persistence
## @param redis.master.persistence.size Redis persistent volume size
##
redis:
  embedded: true

  image:
    registry: "$(T9K_APP_IMAGE_REGISTRY)"
    repository: "$(T9K_APP_IMAGE_NAMESPACE)/redis"
    tag: 7.4.1

  auth:
    password: "REDIS_PASSWORD"
  master:
    resourcesPreset: "large"  # large for testing, xlarge for production
    persistence:
      enabled: true
      size: 8Gi

## @param postgresql.embedded Enable/disable embedded PostgreSQL
## @param postgresql.image.registry PostgreSQL image registry
## @param postgresql.image.repository PostgreSQL image repository
## @param postgresql.image.tag PostgreSQL image tag
## @param postgresql.auth.postgresPassword PostgreSQL admin password
## @param postgresql.auth.database Default PostgreSQL database name
## @param postgresql.primary.resourcesPreset PostgreSQL primary resources preset
## @param postgresql.primary.persistence.enabled Enable/disable PostgreSQL persistence
## @param postgresql.primary.persistence.size PostgreSQL persistent volume size
##
postgresql:
  embedded: true

  image:
    registry: "$(T9K_APP_IMAGE_REGISTRY)"
    repository: "$(T9K_APP_IMAGE_NAMESPACE)/postgresql"
    tag: 16.3.0-debian-12-r4

  auth:
    postgresPassword: "testpassword"
    database: "dify"

  primary:
    resourcesPreset: "xlarge"  # xlarge for testing, 2xlarge for production
    persistence:
      enabled: true
      size: 256Gi

## @param minio.embedded Enable/disable embedded MinIO
## @param minio.resourcesPreset MinIO resources preset
## @param minio.image.registry MinIO image registry
## @param minio.image.repository MinIO image repository
## @param minio.image.tag MinIO image tag
## @param minio.auth.rootUser MinIO root username
## @param minio.auth.rootPassword MinIO root password
## @param minio.persistence.enabled Enable/disable MinIO persistence
## @param minio.persistence.size MinIO persistent volume size
##
minio:
  embedded: true

  image:
    registry: "$(T9K_APP_IMAGE_REGISTRY)"
    repository: "$(T9K_APP_IMAGE_NAMESPACE)/minio"
    tag: 2024.4.18-debian-12-r0

  auth:
    rootUser: minioadmin
    rootPassword: minioadmin

  resourcesPreset: "large"  # large for testing, xlarge for production

  persistence:
    enabled: true
    size: 128Gi
