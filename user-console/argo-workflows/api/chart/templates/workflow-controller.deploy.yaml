apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-workflow-controller
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: argo-workflow-controller
  template:
    metadata:
      labels:
        app: argo-workflow-controller
    spec:
      containers:
      - args: []
        command:
        - workflow-controller
        - --executor-image={{ .Values.executor.image }}
        - --configmap=argo-workflow-controller-configmap
        env:
        - name: LEADER_ELECTION_IDENTITY
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: {{ .Values.controller.image }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 6060
          initialDelaySeconds: 90
          periodSeconds: 60
          timeoutSeconds: 30
        name: workflow-controller
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 6060
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: argo-workflow-controller
      securityContext:
        runAsNonRoot: true
      serviceAccountName: argo
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argo-workflow-controller-configmap
  namespace: {{ .Release.Namespace }}
data:
  workflowDefaults: |
    spec:
      serviceAccountName: managed-project-sa
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: argo-workflow-controller
value: 1000000
